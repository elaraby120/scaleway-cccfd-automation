name: Manage Scaleway MoxeApp Instance - Bureau 9h-21h

on:
  schedule:
    # D√©marrage √† 9h Paris = 7h UTC, Lundi √† Samedi
    - cron: '0 7 * * 1-6'
    # Arr√™t √† 21h Paris = 19h UTC, Lundi √† Samedi  
    - cron: '0 19 * * 1-6'
    # Arr√™t le dimanche √† 1h du matin (au cas o√π l'instance serait encore allum√©e)
    - cron: '0 23 * * 0'
  
  # Permet de lancer manuellement le workflow
  workflow_dispatch:
    inputs:
      action:
        description: 'Action √† effectuer'
        required: true
        default: 'status'
        type: choice
        options:
        - status
        - start
        - stop

jobs:
  manage-instance:
    runs-on: ubuntu-latest
    
    steps:
    - name: Determine action based on schedule
      id: determine-action
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "action=${{ github.event.inputs.action }}" >> $GITHUB_OUTPUT
          echo "üìã Manual execution: ${{ github.event.inputs.action }}"
        else
          CURRENT_HOUR=$(date -u +%H)
          CURRENT_DAY=$(date -u +%u)  # 1=Monday, 7=Sunday
          
          echo "üïê Current time: ${CURRENT_HOUR}h UTC (day: $CURRENT_DAY)"
          
          if [ "$CURRENT_DAY" = "7" ]; then
            # Dimanche - arr√™t complet
            echo "action=stop" >> $GITHUB_OUTPUT
            echo "üìÖ Sunday detected - stopping instance for the weekend"
          elif [ "$CURRENT_HOUR" = "07" ]; then
            # 9h Paris - d√©marrage (Lundi √† Samedi)
            echo "action=start" >> $GITHUB_OUTPUT  
            echo "üåÖ 9h Paris - starting instance for work day"
          elif [ "$CURRENT_HOUR" = "19" ]; then
            # 21h Paris - arr√™t (Lundi √† Samedi)
            echo "action=stop" >> $GITHUB_OUTPUT
            echo "üåÜ 21h Paris - stopping instance after work"
          else
            echo "action=status" >> $GITHUB_OUTPUT
            echo "‚ÑπÔ∏è Outside scheduled hours - checking status only"
          fi
        fi

    - name: Execute Scaleway API call
      run: |
        ACTION="${{ steps.determine-action.outputs.action }}"
        
        echo "üéØ Executing action: $ACTION"
        
        if [ "$ACTION" = "stop" ]; then
          echo "üõë Stopping MoxeApp instance..."
          SCALEWAY_ACTION="poweroff"
        elif [ "$ACTION" = "start" ]; then
          echo "üöÄ Starting MoxeApp instance..."
          SCALEWAY_ACTION="poweron"
        else
          echo "‚ÑπÔ∏è Getting instance status..."
          STATUS_RESPONSE=$(curl -s -H "X-Auth-Token: ${{ secrets.SCALEWAY_TOKEN }}" \
            "https://api.scaleway.com/instance/v1/zones/fr-par-1/servers/${{ secrets.INSTANCE_ID }}")
          
          if echo "$STATUS_RESPONSE" | jq -e '.server' > /dev/null 2>&1; then
            CURRENT_STATUS=$(echo "$STATUS_RESPONSE" | jq -r '.server.state')
            echo "üìä Instance current status: $CURRENT_STATUS"
          else
            echo "‚ùå Unable to get instance status"
            echo "$STATUS_RESPONSE"
          fi
          exit 0
        fi
        
        # Appel API Scaleway pour start/stop
        echo "üîÑ Calling Scaleway API..."
        RESPONSE=$(curl -s -w "%{http_code}" -o /tmp/response.json \
          -X POST \
          -H "X-Auth-Token: ${{ secrets.SCALEWAY_TOKEN }}" \
          -H "Content-Type: application/json" \
          "https://api.scaleway.com/instance/v1/zones/fr-par-1/servers/${{ secrets.INSTANCE_ID }}/action" \
          -d "{\"action\": \"$SCALEWAY_ACTION\"}")
        
        HTTP_CODE="${RESPONSE: -3}"
        
        if [ "$HTTP_CODE" = "202" ]; then
          echo "‚úÖ Action '$ACTION' executed successfully!"
          echo "üìÖ Next scheduled action will be automatic"
        else
          echo "‚ùå Error: HTTP $HTTP_CODE"
          echo "Response:"
          cat /tmp/response.json
          exit 1
        fi

    - name: Summary
      run: |
        ACTION="${{ steps.determine-action.outputs.action }}"
        if [ "$ACTION" != "status" ]; then
          echo "üéâ MoxeApp instance action completed: $ACTION"
          echo "üìã Work schedule: Monday-Saturday 9h-21h Paris time"
          echo "üèñÔ∏è Sunday: Instance stopped (no work day)"
        fi
